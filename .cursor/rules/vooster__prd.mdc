---
description:
globs:
alwaysApply: true
---
# Product Requirements Document

## 1. Executive Summary  
Build “MTG Gacha” – a mobile app and mobile web platform (Capacitor-based for app) that lets Magic: The Gathering players buy digital gacha packs, convert obtained cards into in-app points, and redeem merchandise or additional packs. The service offers a legal, engaging, and convenient way to enjoy randomized card acquisition while driving recurring revenue through micro-transactions.

## 2. Problem Statement  
• Physical MTG boosters are costly, hard to access instantly, and limit trading options.  
• Existing digital MTG platforms focus on gameplay, not collection gacha.  
• Players lack a trusted, transparent system to convert surplus digital cards into tangible rewards.

## 3. Goals and Objectives  
Primary Goal  
– Deliver a seamless gacha experience that converts card pulls into redeemable value.  

Secondary Goals  
– Increase user engagement via collection management and AI suggestions.  
– Provide cross-platform accessibility (iOS/Android mobile apps and mobile web).  
– Generate sustainable revenue through in-app purchases.  

Success Metrics  
– D1, D7, D30 retention ≥ 35 / 25 / 15 %.  
– 5 % conversion to paying users within 30 days.  
– Average revenue per paying user (ARPPU) ≥ USD 15/month.  
– 99 % transaction success rate, < 0.5 % fraud.  

## 4. Target Audience  
Primary Users  
– MTG players aged 18-40, tech-savvy, casual to competitive, interested in collecting rare cards.  

Secondary Users  
– Merchandising partners, tournament organizers, content creators who benefit from increased MTG engagement.

## 5. User Stories  
– As a collector, I want to buy a gacha pack with one tap so that I instantly see new cards.  
– As a budget player, I want to convert duplicate cards to points so that I can buy items I actually need.  
– As a merch hunter, I want to redeem points for exclusive playmats so that I stand out at events.  
– As a new user, I want social login so that onboarding is frictionless.  
– As a power user, I want deck suggestions based on my collection so that I optimize gameplay.  

## 6. Functional Requirements  

### Core Features  

1. Gacha Pack Purchase  
   – Randomized card draw following official rarity ratios.  
   – Payment gateways: Stripe (web), Apple/Google IAP (mobile).  
   – Animation with skip option.  
   – Acceptance: 100 % randomness audit; purchase ≤ 3 s latency; refund flow supported.

2. Point Conversion Engine  
   – Automatic conversion of selected cards to “Mana Points.”  
   – Conversion rates vary by rarity.  
   – Real-time balance update.  
   – Acceptance: balance accuracy ±0; audit log available.

3. Merchandise & Digital Store  
   – Catalog of physical goods (playmats, sleeves) and digital goods (premium avatars).  
   – Inventory, shipping address management, tax/VAT handling.  
   – Acceptance: checkout ≤ 4 steps; confirmation email within 1 min.

4. Collection Management  
   – Grid & list views, filters by color, set, rarity.  
   – Share collection via URL or QR.  
   – Acceptance: load ≤ 1 s for 1 k cards; share link valid 30 days.

5. User Account & Authentication  
   – Email/pass, Google, Apple, and Discord login.  
   – 2FA optional.  
   – Acceptance: session expiry 30 days; OWASP compliance.

6. Payment & Wallet  
   – Multi-currency support, localize prices.  
   – Transaction history, receipts.  
   – Acceptance: PCI-DSS Level 1; dispute rate < 0.3 %.

### Supporting Features  
– AI Recommendation: suggest packs/decks based on collection.  
– Push Notifications: drop alerts, shipping updates.  
– Referral Program: codes grant bonus points.  
– Admin Dashboard: manage inventory, audit logs.  

## 7. Non-Functional Requirements  
Performance: 95th percentile API < 300 ms, page LCP < 2.5 s.  
Security: JWT auth, TLS 1.3, GDPR/CCPA compliance, encryption at rest.  
Usability: WCAG 2.1 AA, intuitive UI across devices.  
Scalability: 1 k → 100 k DAU via autoscaling.  
Compatibility: iOS 14+, Android 10+, major mobile browsers (Chrome, Safari).

## 8. Technical Considerations  
Architecture:  
– Front-end: Capacitor-based native mobile app for iOS and Android, responsive mobile web (Next.js or equivalent).
– Back-end: Supabase (Postgres, Auth), Node micro-services for gacha engine.  
– CDN for assets (Cloudflare).  
Integrations:  
– Wizards of the Coast card API for card metadata.  
– Stripe, Apple Pay, Google Pay.  
– SendGrid for transactional email.  
Data:  
– Card pulls, point balances, inventory, user analytics stored in Postgres.  
– Daily backup, 30-day retention.  
Third-Party:  
– Analytics (PostHog), Crashlytics, Sentry.  

## 9. Success Metrics and KPIs  
Product: MAU, retention cohorts, session length.  
Business: Gross Merchandise Volume (GMV), ARPPU, LTV/CAC ratio ≥ 3.  
Technical: API error rate < 0.2 %, uptime 99.9 %.  

## 10. Timeline and Milestones  
Phase 1 – UI/Frontend Focus (Day 1-2)
– Build and validate core UI screens and interactive flows (purchase, collection, login) using placeholder/mock data. Ensure responsive and intuitive user experience across web and mobile.
Phase 2 – Backend Integration (Day 3-5)
– Connect frontend to backend services (gacha engine, authentication, point system). Implement real data flows, APIs, and transaction logic.
Phase 3 – Beta and GA (Day 6-7)
– Enable social login, merchandise store, AI recommendations, referral, push notifications, advanced analytics, and regional expansions.
## 11. Risks and Mitigation  
Technical: Randomization fairness → use verifiable RNG & third-party audit.  
Business: IP licensing with Wizards → secure legal agreement early.  
User Adoption: Paywall fatigue → offer free daily pack to drive engagement.  
Security: Fraud & chargebacks → implement fraud scoring and velocity checks.  

## 12. Future Considerations  
– P2P trading marketplace with escrow.  
– Blockchain verifiable ownership (opt-in).  
– Tournament integration with prize payouts.  
– Localization: Japanese, Korean, Spanish.
